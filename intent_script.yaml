Set_temperature:
  action:
    - service: "climate.set_temperature"
      data:
        temperature: "{{ percentage }}"
      target:
        area_id: "{{ area }}"
  speech:
    text: "Am setat termostatul din {{ area }} la {{ percentage }} de grade"
#Get_temperature:
#  speech:
#    data:
#      climate: "{{ climate }}"
#    text: "Temperatura este de {{ state_attr(climate, 'current_temperature') | replace('.', ' virgulă ') }} grade."
    
SetCover:
  action:
    - service: "cover.set_cover_position"
      data:
        position: "{{ percentage }}"
      target:
        area: "{{ area }}"
  speech:
    text: "Am setat ruloul din {{ area }} la {{ percentage }}"

SetCover_min_max:
  action:
    service: "cover.set_cover_position"
    data:
      position: "{{ percentage_min_max }}"
    target:
      area: "{{ area }}"
  speech:
    text: "Am setat ruloul din {{ area }} la {{ percentage }}"

    
MediaPause:
  action:
    service: "media_player.media_pause"
    target:
      area_id: "{{area}}"
  speech:
    text: " "
#  speech:
#    text: "Am pus pauză în {{area}}"

MediaPlay:
  action:
    service: "media_player.media_play"
    target:
      area_id: "{{area}}"
  speech:
    text: " "
#  speech:
#    text: "Am reluat redarea"

MediaStop:
  action:
    service: "media_player.media_stop"
    target:
      area_id: "{{area}}"
  speech:
    text: " "
#  speech:
#    text: "Am oprit redarea în {{area}}"

MediaSetVolume:
  action:
    service: "media_player.volume_set"
    data:
      volume_level: "{{percentage / 100}}"
    target:
      area_id: "{{area}}"
  speech:
    text: "Am setat  volumul din {{area}} la {{ percentage }}"

MediaSetVolume_min_max:
  action:
    service: "media_player.volume_set"
    data:
      volume_level: "{{ ((percentage_min_max | float) / 100)}}"
    target:
      area_id: "{{area}}"
  speech:
    text: "Am setat volumul din {{ area }} la {{ percentage_min_max }}"


SpotifyPlaylistPlay:
  action:
    service: spotcast.start
    data:
      entity_id: "{{ media_player }}"
      uri: "spotify:playlist:{{ playlist }}"
      random_song: true
      force_playback: true
      repeat: context
      shuffle: true
      start_volume: 50
  speech:
    text: "Se redă playlistul de pe spotify"

GetWeather:
  speech:
    text: " Temperatura de afara este {{ state_attr('weather.openweathermap', 'temperature')| replace('.', ' virgulă ' }} grade, viteza vântului este {{state_attr('weather.openweathermap', 'wind_speed')| replace('.', ' virgulă ' }} kilometri pe oră, probabilitatea de precipitații este de {{ states('sensor.openweathermap_forecast_precipitation_probability')| replace('.', ' virgulă ' }} la sută, și este {{ states('sensor.openweathermap_weather') }}"

GetTime:
  speech:
    text: "Este ora {{ states.sensor.time.state }}"

GetDate:
  speech:
    text: "Astăzi este {{ states.sensor.date.state }}"
ShoppingList_remove:
  action:
    service: "shopping_list.remove_item"
    data:
      name: "{{name}}"
  speech:
    text: "am înlăturat {{name}} din lista de cumpărături"
    
  Light_reset:
  action:
    - service: "light.turn_on"
      data:
        color_temp: 320
        brightness_pct: 90
      target:
        area_id: "{{ area }}"
  speech:
    text: "Am resetat lumina din {{ area }}"


